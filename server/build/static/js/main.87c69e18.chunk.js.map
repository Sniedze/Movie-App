{"version":3,"sources":["components/navigation/Navigation.module.css","pages/home/Home.module.css","components/search/Search.module.css","pages/login/Login.module.css","components/ProtectedRoute.jsx","functions/auth.js","functions/apiHelpers.js","pages/home/Home.jsx","pages/movies/Movies.jsx","components/search/Search.jsx","api-key.jsx","pages/movies/AddMovies.jsx","pages/login/PasswordReset.jsx","pages/login/CreateNewPassword.jsx","pages/login/Login.jsx","components/navigation/Navigation.jsx","App.js","serviceWorker.js","index.js","pages/movies/Movies.module.css"],"names":["module","exports","Component","component","rest","render","props","localStorage","getItem","to","pathname","state","from","location","API_URL","login","username","password","a","axios","url","method","headers","data","response","getAllMovies","get","movies","getUsersMovies","userId","Authorization","user_id","addMovie","title","year","updateMovie","id","watched","deleteMovie","Home","useState","setMovies","useEffect","apiHelpers","uniqueMovies","Set","map","obj","find","fetchAllMovies","className","styles","length","movie","index","li","key","h4","Movies","message","setMessage","fetchUsersMovies","updateStatus","e","movieId","stopPropagation","res","status","document","getElementById","remove","container","activeClassName","usersMovies","checkboxWatched","checkbox","onClick","isWatched","spanStyle","hidden","movieTitle","Search","searchValue","setSearchValue","search_container","value","onChange","target","type","placeholder","input","button","preventDefault","search","AddMovies","setMovieTitle","movieYear","setMovieYear","errorMessage","setErrorMessage","loading","setLoading","handleAddMovie","event","some","toLowerCase","name","defaultValue","fetch","apiConfig","then","json","jsonResponse","Response","Error","results","Title","Poster","width","alt","src","Year","divStyle","classList","toggle","handleMoviePick","imdbID","PasswordReset","email","setEmail","submitted","setSubmitted","body","JSON","stringify","console","log","token","CreateNewPassword","history","useHistory","setToken","setPassword","confirmPassword","setConfirmPassword","replace","Login","handleLoginClick","setUsername","error","setError","handleLogin","setItem","Navigation","isAuth","handleLogoutClick","menu","active","exact","logoutA","App","setIsAuth","removeItem","path","ProtectedRoute","Boolean","window","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.87c69e18.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Navigation_menu__2B_Ec\",\"a\":\"Navigation_a__2rx-L\",\"active\":\"Navigation_active__RCiQF\",\"logoutA\":\"Navigation_logoutA__1BuCM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movies\":\"Home_movies__2ygiD\",\"li\":\"Home_li__1hHk8\",\"h4\":\"Home_h4__3QM-n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search_container\":\"Search_search_container__3j7mh\",\"input\":\"Search_input__1CP8V\",\"button\":\"Search_button__1zIIq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__2ubcz\",\"error\":\"Login_error__2szsq\"};","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../functions/auth\";\r\n\r\nexport default ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      isAuthenticated() ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/login\",\r\n            state: { from: props.location },\r\n          }}\r\n        />\r\n      )\r\n    }\r\n  />\r\n);\r\n","//import { get } from \"lodash\";\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"user_id\");\r\n};\r\n\r\n//******** Stores token in the local storage after user has logged in******/\r\n\r\nexport const authenticate = (data) =>\r\n  fetch(\"http://localhost:8080/users/login\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(data),\r\n  }).then((res) => {\r\n    if (res.status === 200) {\r\n      return res.json().then(({ token, user_id }) => {\r\n        localStorage.setItem(\"token\", `Bearer ${token}`);\r\n        localStorage.setItem(\"user_id\", user_id);\r\n        return token;\r\n      });\r\n    }\r\n  });\r\n\r\n//******** User is authenticated if there is a valid token in her local storage******/\r\n\r\nexport const isAuthenticated = () => !!localStorage.getItem(\"token\");\r\n\r\nexport default authenticate;\r\n","import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:8080/\";\r\n\r\nconst login = async (username, password) => {\r\n  const response = await axios({\r\n    url: `${API_URL}users/login`,\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    data: { username, password },\r\n  });\r\n  return response;\r\n};\r\n\r\nconst getAllMovies = async () => {\r\n  const { data: movies } = await axios.get(`${API_URL}allmovies`);\r\n  return movies;\r\n};\r\n\r\nconst getUsersMovies = async () => {\r\n  const userId = localStorage.getItem(\"user_id\");\r\n  const { data: movies } = await axios({\r\n    url: `${API_URL}movies`,\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: localStorage.getItem(\"token\"),\r\n      user_id: userId,\r\n    },\r\n  });\r\n  return movies;\r\n};\r\n\r\nconst addMovie = async (title, year) => {\r\n  const user_id = localStorage.getItem(\"user_id\");\r\n  const response = await axios({\r\n    url: `${API_URL}movies/addmovie`,\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: localStorage.getItem(\"token\"),\r\n    },\r\n    data: { title, year, user_id },\r\n  });\r\n  return response;\r\n};\r\n\r\nconst updateMovie = async (id, watched) => {\r\n  const response = await axios({\r\n    url: `${API_URL}movies/${id}`,\r\n    method: \"PATCH\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: localStorage.getItem(\"token\"),\r\n    },\r\n    data: { watched },\r\n  });\r\n  return response;\r\n};\r\n\r\nconst deleteMovie = async (id) => {\r\n  const response = await axios({\r\n    url: `${API_URL}movies/${id}`,\r\n    method: \"DELETE\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: localStorage.getItem(\"token\"),\r\n    },\r\n  });\r\n  return response;\r\n};\r\n\r\nexport default {\r\n  login,\r\n  getAllMovies,\r\n  getUsersMovies,\r\n  updateMovie,\r\n  deleteMovie,\r\n  addMovie,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styles from \"./Home.module.css\";\r\nimport apiHelpers from \"../../functions/apiHelpers\";\r\n\r\nconst Home = () => {\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAllMovies = async () => {\r\n      const movies = await apiHelpers.getAllMovies();\r\n      //console.log(movies);\r\n      if (movies) {\r\n        const uniqueMovies = [...new Set(movies.map((obj) => obj.title))].map(\r\n          (title) => {\r\n            return movies.find((obj) => obj.title === title);\r\n          }\r\n        );\r\n\r\n        setMovies((movies) => uniqueMovies);\r\n      }\r\n    };\r\n    fetchAllMovies();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.movies}>\r\n      <h1>Recommended Movies</h1>\r\n      {movies.length > 0 ? (\r\n        <ul>\r\n          {movies.map((movie, index) => (\r\n            <li className={styles.li} key={index}>\r\n              <h4 className={styles.h4}>{movie.title}</h4>\r\n              <h4 className={styles.h4}>{movie.year}</h4>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <h3>There are no movies to show.</h3>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styles from \"./Movies.module.css\";\r\nimport apiHelpers from \"../../functions/apiHelpers\";\r\n\r\nconst Movies = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchUsersMovies = async () => {\r\n      const movies = await apiHelpers.getUsersMovies();\r\n      setMovies(movies);\r\n    };\r\n    fetchUsersMovies();\r\n  }, [movies]);\r\n\r\n  const updateStatus = async (e, movieId, watched, title) => {\r\n    try {\r\n      e.stopPropagation();\r\n      const res = await apiHelpers.updateMovie(movieId, watched);\r\n      if (res.status === 200) {\r\n        setMovies(\r\n          movies.map((movie) => (movie.id === movieId ? res.data.movie : movie))\r\n        );\r\n\r\n        watched\r\n          ? setMessage(`Marked movie ${title} as watched`)\r\n          : setMessage(`Marked movie ${title} as NOT watched`);\r\n      }\r\n    } catch (err) {\r\n      setMessage(err);\r\n    }\r\n  };\r\n\r\n  const deleteMovie = async (e, id, title) => {\r\n    try {\r\n      e.stopPropagation();\r\n      const res = await apiHelpers.deleteMovie(id);\r\n      if (res.status === 200) {\r\n        setMessage(`Movie ${title} deleted`);\r\n        document.getElementById(id).remove();\r\n      }\r\n    } catch (err) {\r\n      setMessage(`Failed to delete ${title}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {movies.length > 0 ? (\r\n        <div className={styles.container}>\r\n          <h1>My Movies</h1>\r\n          <h3 className={styles.message}>{message}</h3>\r\n          <NavLink\r\n            activeClassName=\"active\"\r\n            to={{ pathname: \"/addmovies\", state: { usersMovies: movies } }}\r\n          >\r\n            Add Movies\r\n          </NavLink>\r\n          <table className={styles.movies}>\r\n            <thead>\r\n              <tr>\r\n                <th>Title</th>\r\n                <th>Year</th>\r\n                <th>Watched</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {movies.map((movie, index) => (\r\n                <tr key={index} id={movie.id}>\r\n                  <td className={movie.watched ? styles.watched : \"\"}>\r\n                    {movie.title}\r\n                  </td>\r\n                  <td className={movie.watched ? styles.watched : \"\"}>\r\n                    {movie.year}\r\n                  </td>\r\n                  <td>\r\n                    <div\r\n                      className={\r\n                        movie.watched ? styles.checkboxWatched : styles.checkbox\r\n                      }\r\n                      onClick={(e) => {\r\n                        let isWatched = !movie.watched;\r\n                        let movieId = movie.id;\r\n                        updateStatus(e, movieId, isWatched, movie.title);\r\n                      }}\r\n                      id=\"isWatched\"\r\n                    >\r\n                      <span\r\n                        id={`span${movie.id}`}\r\n                        className={\r\n                          movie.watched ? styles.spanStyle : styles.hidden\r\n                        }\r\n                      >\r\n                        ✔\r\n                      </span>\r\n                    </div>\r\n                  </td>\r\n                  <td>\r\n                    <button\r\n                      className=\"button delete-button\"\r\n                      onClick={(e) => {\r\n                        let movieId = movie.id;\r\n                        let movieTitle = movie.title;\r\n                        deleteMovie(e, movieId, movieTitle);\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <h3>You haven`t added any movie to the list.</h3>\r\n          <NavLink\r\n            activeClassName=\"active\"\r\n            to={{ pathname: \"/addmovies\", state: { usersMovies: movies } }}\r\n          >\r\n            Add Movies\r\n          </NavLink>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./Search.module.css\";\r\n\r\nconst Search = (props) => {\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n  const handleSearchInputChanges = (e) => {\r\n    setSearchValue(e.target.value);\r\n  };\r\n\r\n  const resetInputField = () => {\r\n    setSearchValue(\"\");\r\n  };\r\n\r\n  const callSearchFunction = (e) => {\r\n    e.preventDefault();\r\n    props.search(searchValue);\r\n    resetInputField();\r\n  };\r\n\r\n  return (\r\n    <form className={styles.search_container}>\r\n      <input\r\n        value={searchValue}\r\n        onChange={handleSearchInputChanges}\r\n        type=\"text\"\r\n        placeholder=\"Title\"\r\n        className={styles.input}\r\n      />\r\n      <input\r\n        className={styles.button}\r\n        onClick={callSearchFunction}\r\n        type=\"submit\"\r\n        value=\"Search\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","export default {\r\n  owmKey: \"4a3b711b\",\r\n};\r\n","import React, { useState } from \"react\";\r\nimport Search from \"../../components/search/Search\";\r\nimport styles from \"./Movies.module.css\";\r\nimport apiConfig from \"../../api-key\";\r\nimport apiHelpers from \"../../functions/apiHelpers\";\r\n\r\nconst AddMovies = (props) => {\r\n  const [movieTitle, setMovieTitle] = useState(\"\");\r\n  const [movieYear, setMovieYear] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [movies, setMovies] = useState([]);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const search = (searchValue) => {\r\n    setLoading(true);\r\n    setErrorMessage(null);\r\n\r\n    fetch(\r\n      `https://www.omdbapi.com/?s=${searchValue}&apikey=${apiConfig.owmKey}`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((jsonResponse) => {\r\n        if (jsonResponse.Response === \"True\") {\r\n          setMovies(jsonResponse.Search);\r\n          setLoading(false);\r\n        } else {\r\n          setErrorMessage(jsonResponse.Error);\r\n          setLoading(false);\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleMoviePick = (e, movieId) => {\r\n    document\r\n      .getElementById(`span${movieId}`)\r\n      .classList.toggle(`${styles.hidden}`);\r\n  };\r\n\r\n  const handleAddMovie = async (event) => {\r\n    event.preventDefault();\r\n    const usersMovies = props.location.state.usersMovies;\r\n    if (!movieTitle && !movieYear) {\r\n      setMessage(\"Please enter something\");\r\n      return;\r\n    }\r\n    if (\r\n      usersMovies.some(\r\n        ({ title, year }) =>\r\n          title.toLowerCase() === movieTitle ||\r\n          (title === movieTitle && year === movieYear)\r\n      )\r\n    ) {\r\n      setMessage(`Movie ${movieTitle} already exists in your list`);\r\n      return;\r\n    }\r\n    const res = await apiHelpers.addMovie(movieTitle, movieYear);\r\n    if (res.status === 200) {\r\n      setMessage(`Movie ${movieTitle} added to your list`);\r\n    } else setMessage(`Failed to add movie ${movieTitle} to the list`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h3>Add New Movie</h3>\r\n      <form method=\"POST\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          placeholder=\"Title\"\r\n          defaultValue={movieTitle}\r\n          onChange={(e) => setMovieTitle(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"year\"\r\n          placeholder=\"Year\"\r\n          onChange={(e) => setMovieYear(e.target.value)}\r\n        />\r\n        <button className=\"button\" onClick={handleAddMovie}>\r\n          Add movie\r\n        </button>\r\n      </form>\r\n      <h3 className={styles.message}>{message}</h3>\r\n      <h3>Or Search for the movie</h3>\r\n      <Search search={search} />\r\n      {movies ? (\r\n        <div className={styles.results}>\r\n          {loading && !errorMessage ? (\r\n            <span>loading...</span>\r\n          ) : errorMessage ? (\r\n            <div className=\"errorMessage\">{errorMessage}</div>\r\n          ) : (\r\n            movies.map((movie, index) => (\r\n              <div className={styles.movie} key={`${index}-${movie.Title}`}>\r\n                <h4>{movie.Title}</h4>\r\n\r\n                <div>\r\n                  {movie.Poster ? (\r\n                    <img\r\n                      width=\"200\"\r\n                      alt={`The movie titled: ${movie.Title}`}\r\n                      src={movie.Poster}\r\n                    />\r\n                  ) : (\r\n                    <img\r\n                      width=\"200\"\r\n                      alt={`The movie titled: ${movie.Title}`}\r\n                      src=\"https://m.media-amazon.com/images/M/MV5BMTczNTI2ODUwOF5BMl5BanBnXkFtZTcwMTU0NTIzMw@@._V1_SX300.jpg\"\r\n                    />\r\n                  )}\r\n                </div>\r\n                <h4>{movie.Year}</h4>\r\n                <div\r\n                  className={styles.divStyle}\r\n                  onClick={(e) => {\r\n                    setMovieTitle(movie.Title);\r\n                    setMovieYear(movie.Year);\r\n                    let movieId = movie.imdbID;\r\n                    handleMoviePick(e, movieId);\r\n                  }}\r\n                  id=\"isPicked\"\r\n                >\r\n                  <span className={styles.hidden} id={`span${movie.imdbID}`}>\r\n                    ✔\r\n                  </span>\r\n                </div>\r\n                <button\r\n                  onClick={(event) => {\r\n                    handleAddMovie(event);\r\n                  }}\r\n                >\r\n                  Add movie\r\n                </button>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <h2>{errorMessage}</h2>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddMovies;\r\n","import React, { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst PasswordReset = ({ url }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const handleSubmit = (event) => {\r\n    setSubmitted(true);\r\n    event.preventDefault();\r\n    if (email) {\r\n      fetch(`${url}password/reset`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ email }),\r\n      }).then((res) => {\r\n        if (res.status === 200) {\r\n          console.log(res.body.token);\r\n        }\r\n      });\r\n    } else {\r\n      setMessage(\"Invalid Data\");\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <h2>Request a New Password</h2>\r\n      {submitted ? (\r\n        <div>\r\n          <h3>WE emailed you the token to reset your password.</h3>\r\n          <NavLink to=\"/createpassword\">Create the new password here</NavLink>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <p>\r\n            It happens to the best of us. Enter your email and we'll send you\r\n            reset instructions.\r\n          </p>\r\n          <form method=\"POST\">\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Email\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n\r\n            <button onClick={handleSubmit}>Request new password</button>\r\n          </form>\r\n          <NavLink to=\"/login\">I remember my passowrd</NavLink>\r\n        </div>\r\n      )}\r\n      {message}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PasswordReset;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst CreateNewPassword = ({ url }) => {\r\n  const history = useHistory();\r\n  const [token, setToken] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [email, setEmail] = useState(false);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if ((email, token, password, confirmPassword)) {\r\n      fetch(`${url}password/create`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ email, token, password, confirmPassword }),\r\n      }).then((res) => {\r\n        if (res.status === 200) {\r\n          history.replace(\"/login\");\r\n        }\r\n      });\r\n    } else {\r\n      setMessage(\"Invalid Data\");\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <h3>Create New Password</h3>\r\n      <form method=\"POST\">\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Email\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n\r\n        <input\r\n          type=\"text\"\r\n          name=\"token\"\r\n          placeholder=\"Token\"\r\n          onChange={(e) => setToken(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"repeatPassword\"\r\n          placeholder=\"Repeat Password\"\r\n          onChange={(e) => setConfirmPassword(e.target.value)}\r\n        />\r\n        <button onClick={handleSubmit}>Submit</button>\r\n      </form>\r\n      <h3>{message}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateNewPassword;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory, NavLink } from \"react-router-dom\";\r\nimport styles from \"./Login.module.css\";\r\nimport apiHelpers from \"../../functions/apiHelpers\";\r\n\r\nconst Login = ({ handleLoginClick }) => {\r\n  const history = useHistory();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    if (!username && !password) {\r\n      setError(\"Please enter valid username and password\");\r\n      return;\r\n    }\r\n    try {\r\n      const res = await apiHelpers.login(username, password);\r\n      if (res.status === 200) {\r\n        localStorage.setItem(\"token\", `Bearer ${res.data.token}`);\r\n        localStorage.setItem(\"user_id\", res.data.user_id);\r\n        history.replace(\"/movies\");\r\n        handleLoginClick();\r\n      }\r\n    } catch (err) {\r\n      setError(\"Invalid data\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h1>Login</h1>\r\n      <form method=\"POST\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          placeholder=\"Username\"\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <button className=\"button\" onClick={handleLogin}>\r\n          Log in\r\n        </button>\r\n      </form>\r\n      <NavLink to=\"/passwordreset\">Forgot Password?</NavLink>\r\n      <h2 className={styles.error}>{error}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styles from \"./Navigation.module.css\";\r\n\r\nconst Navigation = ({ isAuth, handleLogoutClick }) => {\r\n  return (\r\n    <nav className={styles.menu}>\r\n      <>\r\n        <NavLink\r\n          className={styles.a}\r\n          activeClassName={styles.active}\r\n          to=\"/\"\r\n          exact\r\n        >\r\n          Home\r\n        </NavLink>\r\n        <NavLink\r\n          className={styles.a}\r\n          activeClassName={styles.active}\r\n          to=\"/movies\"\r\n        >\r\n          My Movies\r\n        </NavLink>\r\n        {isAuth ? (\r\n          <NavLink\r\n            className={styles.logoutA}\r\n            to=\"/movies\"\r\n            onClick={handleLogoutClick}\r\n          >\r\n            Log out\r\n          </NavLink>\r\n        ) : (\r\n          <NavLink\r\n            className={styles.a}\r\n            activeClassName={styles.active}\r\n            to=\"/login\"\r\n          >\r\n            Login\r\n          </NavLink>\r\n        )}\r\n      </>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\nimport Home from \"./pages/home/Home\";\nimport Movies from \"./pages/movies/Movies\";\nimport AddMovies from \"./pages/movies/AddMovies\";\nimport PasswordReset from \"./pages/login/PasswordReset\";\nimport CreateNewPassword from \"./pages/login/CreateNewPassword\";\nimport Login from \"./pages/login/Login\";\nimport Navigation from \"./components/navigation/Navigation\";\n\nfunction App() {\n  const [isAuth, setIsAuth] = useState(false);\n\n  useEffect(() => {\n    !!localStorage.getItem(\"token\")\n      ? setIsAuth((isAuth) => true)\n      : setIsAuth((isAuth) => false);\n  }, [isAuth]);\n\n  const handleLogoutClick = (e) => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user_id\");\n    setIsAuth((isAuth) => false);\n  };\n  const handleLoginClick = () => {\n    setIsAuth((isAuth) => true);\n  };\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navigation handleLogoutClick={handleLogoutClick} isAuth={isAuth} />\n        <Switch>\n          <Route exact path=\"/\" component={(props) => <Home {...props} />} />\n          <ProtectedRoute\n            exact\n            path=\"/movies\"\n            component={(props) => <Movies {...props} />}\n          />\n          <ProtectedRoute\n            exact\n            path=\"/addmovies\"\n            component={(props) => <AddMovies {...props} />}\n          />\n          <Route\n            exact\n            path=\"/passwordreset\"\n            component={(props) => <PasswordReset {...props} />}\n          />\n          <Route\n            exact\n            path=\"/createpassword\"\n            component={(props) => <CreateNewPassword {...props} />}\n          />\n\n          <Route\n            path=\"/login\"\n            component={(props) => (\n              <Login {...props} handleLoginClick={handleLoginClick} />\n            )}\n          />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spanStyle\":\"Movies_spanStyle__Mt2tt\",\"divStyle\":\"Movies_divStyle__2X8tP\",\"checkbox\":\"Movies_checkbox__1lz1x\",\"hidden\":\"Movies_hidden__3CWqB\",\"movies\":\"Movies_movies__1hnrf\",\"li\":\"Movies_li__3E3XP\",\"h4\":\"Movies_h4__ZJNw4\",\"results\":\"Movies_results__1M5uZ\",\"movie\":\"Movies_movie__1NKhQ\",\"addMovieLink\":\"Movies_addMovieLink__3RXel\",\"container\":\"Movies_container__3Ixpt\",\"message\":\"Movies_message__147qx\",\"watched\":\"Movies_watched__p8id4\",\"checkboxWatched\":\"Movies_checkboxWatched__2spUF\"};"],"sourceRoot":""}